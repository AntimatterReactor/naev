on:
  push:
  #repository_dispatch:
  #  types: manual-nightly
  #schedule:
  #  - cron: '0 0 * * *'

name: Nightly Release

jobs:
  "Generate-Source":
    runs-on: ubuntu-latest

    steps:
      - name: Update APT Cache
        run: |
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install \
            build-essential \
            automake \
            autoconf-archive \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libsdl2-image-dev \
            libgl1-mesa-dev \
            libxml2-dev \
            libfreetype6-dev \
            libpng-dev \
            libopenal-dev \
            libvorbis-dev \
            binutils-dev \
            libiberty-dev \
            gettext \
            autopoint \
            intltool

      - name: Checkout Naev Repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Generate source archive
        run: |
          ./autogen.sh
          ./configure
          make dist-gzip

      - name: Prepare source artifact
        run: |
          mkdir -p dist/release
          mv naev-*.tar.gz dist/release/source.tar.gz

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: naev-dist
          path: ${{ github.workspace }}/dist/release/source.tar.gz

  "Linux-x86_64":
    runs-on: ubuntu-16.04

    steps:
      - name: Update APT Cache
        run: |
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install \
            build-essential \
            automake \
            autoconf-archive \
            binutils-dev \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libsdl2-image-dev \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            libxml2-dev \
            libfreetype6-dev \
            libpng-dev \
            libopenal-dev \
            libvorbis-dev \
            libiberty-dev \
            gettext \
            autopoint \
            intltool

      - name: Checkout Naev Repository
        uses: actions/checkout@v2

      - name: Build Naev on Linux64
        run: |
          sh "utils/buildAppImage.sh" -n -s "$(pwd)" -b "$(pwd)" -o "$(pwd)/dist"
        env:
          CFLAGS: "-O3"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: naev-lin64
          path: ${{ github.workspace }}/dist/out/*.AppImage

  "Linux-x86_64-SteamRuntime":
    runs-on: ubuntu-latest

    container:
      image: dosowisko/steam-runtime-amd64
      volumes:
        - ${{ github.workspace }}:${{ github.workspace }}

    steps:
      - name: Clone Naev Repository
        run: |
          git clone https://github.com/naev/naev.git ${{ github.workspace }}

      - name: Install Additional Build Dependencies
        run: |
          sudo apt-get -y install autoconf-archive intltool

      - name: Build Naev for Steam on Linux64
        run: |
          cd ${{ github.workspace }}
          ./autogen.sh
          ./configure --disable-debug --build=x86_64-linux-gnu
          make -j$(nproc --all)
        env:
          CFLAGS: "-O3 -std=gnu11"

      - name: Collect Steam Linux64 Release
        run: |
          mkdir -p ${{ github.workspace }}/dist/release/

          mv ${{ github.workspace }}/src/naev ${{ github.workspace }}/dist/release/naev.x64
          chmod +x ${{ github.workspace }}/dist/release/naev.x64

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: naev-steamruntime
          path: ${{ github.workspace }}/dist/release/naev.x64

  "Windows-MinGW64":
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Setup MINGW64 Environment
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-libtool mingw-w64-x86_64-toolchain mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_mixer mingw-w64-x86_64-SDL2_image mingw-w64-x86_64-libxml2 mingw-w64-x86_64-libpng mingw-w64-x86_64-openal mingw-w64-x86_64-libvorbis mingw-w64-x86_64-binutils mingw-w64-x86_64-freetype mingw-w64-x86_64-gettext mingw-w64-x86_64-python-pip mingw-w64-x86_64-luajit mingw-w64-x86_64-nsis mingw-w64-x86_64-pkg-config libtool autoconf autoconf-archive automake automake-wrapper git gettext pkg-config make intltool itstool

      - name: Checkout Naev Repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build Naev on Win64
        run: |
          ./autogen.sh
          ./configure --disable-debug
          make -j$(nproc --all)
        env:
          CFLAGS: "-O3"

      - name: Build Windows Installer
        run: |
          ./extras/windows/packageWindows.sh -n -s "$(pwd)" -b "$(pwd)" -o "$(pwd)/dist"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: naev-win64
          path: |
            ${{ github.workspace }}/dist/out/*

  "Upload-GitHub-Release":
    runs-on: ubuntu-latest
    needs: [Linux-x86_64, Windows-MinGW64, Generate-Source]
    if: ${{ github.repository == 'naev/naev' }}

    steps:
      - name: Update APT Cache
        run: |
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install \
            build-essential \
            automake \
            autoconf-archive \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libsdl2-image-dev \
            libgl1-mesa-dev \
            libxml2-dev \
            libfreetype6-dev \
            libpng-dev \
            libopenal-dev \
            libvorbis-dev \
            binutils-dev \
            libiberty-dev \
            gettext \
            autopoint \
            intltool

      - name: Checkout Naev Repository
        uses: actions/checkout@v2

      - name: Get VERSION
        run: |
          ./autogen.sh
          ./configure
          make dat/VERSION

      - name: Create Release Staging Area
        run: |
          mkdir -p dist/release

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/dist

      - name: Collect files and rename for distribution
        run: |
          BUILD_DATE="$(date +%Y%m%d)"
          VERSION="$(cat dat/VERSION)"

          mv dist/naev-lin64/*.AppImage dist/release/naev-$VERSION.$BUILD_DATE-linux-x86-64.AppImage
          mv dist/naev-win64/naev-win64.exe dist/release/naev-$VERSION.$BUILD_DATE-win64.exe
          mv dist/naev-dist/source.tar.gz dist/release/naev-$VERSION.$BUILD_DATE-source.tar.gz

          chmod +x dist/release/naev-$VERSION.$BUILD_DATE-linux-x86-64.AppImage

      - name: Upload Release Assets
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly"
          prerelease: true
          title: "Nightly Build"
          files: |
            ${{ github.workspace }}/dist/release/*

  "Upload-Steam":
    runs-on: ubuntu-latest
    needs: [Linux-x86_64-SteamRuntime, Windows-MinGW64]
    #if: ${{ github.repository == 'naev/naev' }}

    steps:
      - name: Update APT Cache
        run: |
          sudo add-apt-repository multiverse
          sudo dpkg --add-architecture i386
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install \
            build-essential \
            automake \
            autoconf-archive \
            libsdl2-dev \
            libsdl2-mixer-dev \
            libsdl2-image-dev \
            libgl1-mesa-dev \
            libxml2-dev \
            libfreetype6-dev \
            libpng-dev \
            libopenal-dev \
            libvorbis-dev \
            binutils-dev \
            libiberty-dev \
            gettext \
            autopoint \
            intltool

      - name: Install SteamCMD
        run: |
          echo steamcmd steam/question select "I AGREE" | sudo debconf-set-selections
          sudo apt-get install lib32gcc1 steamcmd

      - name: Checkout Naev Repository
        uses: actions/checkout@v2

      - name: Make data
        run: |
          ./autogen.sh
          ./configure
          make data

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}/dist/staging

      - name: Build and Upload Steam Release
        run: |
          sh "utils/ci/steam/SteamDeploy.sh" -n -s "$(pwd)" -t "dist/staging" -o "dist/steam"
#        env:
#          STEAMCMD_USER: ${{ secrets.STEAMCMD_USER }}
#          STEAMCMD_PASS: ${{ secrets.STEAMCMD_PASS }}
#          TFA_IMAP: ${{ secrets.TFA_IMAP }}
#          TFA_PASS: ${{ secrets.TFA_PASS }}
#          TFA_USER: ${{ secrets.TFA_USER }}
