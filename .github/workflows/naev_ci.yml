on: [push, pull_request]

name: CI

env:
  DESTDIR: "${{ github.workspace }}/dist/"

jobs:
  "Package_Source":
    runs-on: ubuntu-20.04

    steps:
    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Install Meson
      run: |
        pip install meson ninja

    - name: Checkout Naev Repository
      uses: actions/checkout@v2
      with:
        path: source
        fetch-depth: 0

    - name: Meson Build
      run: |
        meson setup build source -Dexecutable=disabled -Ddocs_c=disabled -Ddocs_lua=disabled
        meson dist -C build --no-tests

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: naev-${{ github.sha }}
        path: ${{ github.workspace }}/build/meson-dist/*
        if-no-files-found: error

  "Compile_Naev":
    needs: "Package_Source"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            shell: bash
            config: linux.ini
            pkg-config-path: "[]"
          - os: windows-latest
            shell: msys2 {0}
            config: windows.ini
            pkg-config-path: "[]"
          - os: macos-latest
            shell: bash
            config: macos.ini
            pkg-config-path: '/usr/local/opt/openal-soft/lib/pkgconfig'

    defaults:
      run:
        shell: ${{ matrix.shell }}

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install APT Packages
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get update
        sudo apt-get install \
          autopoint \
          binutils-dev \
          build-essential \
          gettext \
          intltool \
          libfontconfig1-dev \
          libfreetype6-dev \
          libgl1-mesa-dev \
          libgl1-mesa-dri \
          libiberty-dev \
          libluajit-5.1-dev \
          libopenal-dev \
          libpng-dev \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libvorbis-dev \
          libxml2-dev \
          xvfb

    - name: Install MinGW Packages
      if: ${{ runner.os == 'Windows'}}
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: git tar mingw-w64-x86_64-clang mingw-w64-x86_64-fontconfig mingw-w64-x86_64-freetype mingw-w64-x86_64-libvorbis mingw-w64-x86_64-libxml2 mingw-w64-x86_64-luajit mingw-w64-x86_64-mesa mingw-w64-x86_64-meson mingw-w64-x86_64-ninja mingw-w64-x86_64-openal mingw-w64-x86_64-pkg-config mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_mixer

    - name: Install Homebrew Packages
      if: ${{ runner.os == 'macOS'}}
      run: |
        brew update-reset
        brew update
        brew install \
          fontconfig \
          intltool \
          luajit \
          openal-soft \
          pkg-config \
          sdl2 \
          sdl2_image \
          sdl2_mixer

    - name: Setup Python
      if: ${{ runner.os != 'Windows'}}
      uses: actions/setup-python@v2

    - name: Install Meson
      if: ${{ runner.os != 'Windows'}}
      run: |
        pip install meson ninja

    - name: Get Source
      uses: actions/download-artifact@v2
      with:
        name: naev-${{ github.sha }}

    - name: Extract Source
      run: |
        mkdir source
        tar -xf naev-*.tar.xz -C source --strip 1

    - name: Meson Setup
      id: setup
      run: |
        meson setup build source \
            --native-file='source/utils/build/${{ matrix.config }}' \
            --buildtype=release \
            --pkg-config-path=${{ matrix.pkg-config-path }} \
            -Db_lto=true \
            -Dauto_features=enabled \
            -Ddocs_c=disabled \
            -Ddocs_lua=disabled

    - name: Upload Setup Log
      uses: actions/upload-artifact@v2
      if: ${{ success() || steps.setup.outcome == 'failure' }}
      with:
        name: ${{ runner.os }}-${{ github.sha }}-setup-log
        path: ${{ github.workspace }}/build/meson-logs/meson-log.txt
        if-no-files-found: ignore

    - name: Meson Compile
      id: compile
      run: meson compile -C build

    - name: Upload Compile Log
      uses: actions/upload-artifact@v2
      if: ${{ success() || steps.compile.outcome == 'failure' }}
      with:
        name: ${{ runner.os }}-${{ github.sha }}-compile-log
        path: ${{ github.workspace }}/build/meson-logs/meson-log.txt
        if-no-files-found: ignore

    - name: Meson Test
      id: tests
      run: ${{ matrix.test-env }} meson test -C build --print-errorlogs

    - name: Upload test log
      uses: actions/upload-artifact@v2
      if: ${{ success() || steps.tests.outcome == 'failure' }}
      with:
        name: ${{ runner.os }}-${{ github.sha }}-test-log
        path: ${{ github.workspace }}/build/meson-logs/testlog.txt
        if-no-files-found: ignore

    - name: Package
      run: meson install -C build
      if: ${{ success() || steps.tests.outcome == 'failure' }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() || steps.tests.outcome == 'failure' }}
      with:
        name: naev-${{ runner.os }}-${{ github.sha }}
        path: ${{ env.DESTDIR }}/*
        if-no-files-found: error

  "Documentation":
    runs-on: ubuntu-latest
    needs: "Package_Source"

    steps:
    - name: Update APT Cache
      run: |
        sudo apt-get update

    - name: Install Additional Build Dependencies
      run: |
        sudo apt-get install \
          lua-ldoc \
          graphviz \
          doxygen

    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Install Meson
      run: |
        pip install meson ninja

    - name: Get Source
      uses: actions/download-artifact@v2
      with:
        name: naev-${{ github.sha }}

    - name: Extract Source
      run: |
        mkdir source
        tar -xf naev-*.tar.xz -C source --strip 1

    - name: Meson Build
      run: |
        meson setup build source \
            -Dexecutable=disabled
        meson install -C build

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2.0.3
      with:
        key: ${{ secrets.SSH_KEY }}
        name: id_rsa # optional
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
      if: ${{ github.event_name == 'push' && github.repository == 'naev/naev' }}

    - name: Upload Lua Documentation
      run: rsync -e "ssh -o 'StrictHostKeyChecking no'" -rv --delete ${{ env.DESTDIR }}/docs/lua/ travis@iandouglasscott.com:/srv/naevdoc
      if: ${{ github.event_name == 'push' && github.repository == 'naev/naev' }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: naev-docs-${{ github.sha }}
        path: ${{ env.DESTDIR }}/*
        if-no-files-found: error