on: [push, pull_request]

name: CI

env:
  DESTDIR: "${{ github.workspace }}/dist"
  WINEPREFIX: "/tmp/.wine"

jobs:
  "Package_Source":
    runs-on: ubuntu-latest
    container:
      image: projectsynchro/synchros_sexy_docker_images:naev-ubuntu1604

    steps:
      - name: Checkout Naev Repository
        uses: actions/checkout@v2
        with:
          path: source
          fetch-depth: 0

      - name: Package Dist
        run: |
          meson setup build source -Dexecutable=disabled -Ddocs_c=disabled -Ddocs_lua=disabled
          meson dist -C build --no-tests --include-subprojects

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v2
        with:
          name: naev-dist-${{ github.sha }}
          path: ${{ github.workspace }}/build/meson-dist/*

  "Compile_Naev":
    needs: "Package_Source"

    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: naev-ubuntu2004
            config: linux.ini

          - tag: naev-steamruntime
            config: linux_steamruntime.ini

          - tag: naev-windows
            config: windows_cross_mxe.ini

    runs-on: ubuntu-latest
    container:
      image: "projectsynchro/synchros_sexy_docker_images:${{ matrix.tag }}"

    steps:
      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naev-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naev-dist-${{ github.sha }}/naev-*.tar.xz -C source --strip 1

      - name: Meson Setup
        if: ${{ matrix.tag != 'naev-windows' }}
        id: setup
        run: |
          meson setup build source \
              --native-file='source/utils/build/${{ matrix.config }}' \
              --buildtype=debug \
              --wrap-mode=forcefallback \
              -Db_lto=true \
              -Dauto_features=enabled \
              -Ddocs_c=disabled \
              -Ddocs_lua=disabled \
              -Dforce_fallback_for=SuiteSparse

      - name: Cross-compile Meson Setup
        if: ${{ matrix.tag == 'naev-windows' }}
        id: crossSetup
        run: |
          meson setup build source \
              --cross-file='source/utils/build/${{ matrix.config }}' \
              --buildtype=debug \
              --wrap-mode=forcefallback \
              -Db_lto=true \
              -Dauto_features=enabled \
              -Ddocs_c=disabled \
              -Ddocs_lua=disabled \
              -Dforce_fallback_for=SuiteSparse

      - name: Upload Setup Log
        uses: actions/upload-artifact@v1
        if: ${{ success() || steps.setup.outcome == 'failure' || steps.crossSetup.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-setup-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Meson Compile
        id: compile
        run: |
          meson compile -C build

      - name: Upload Compile Log
        uses: actions/upload-artifact@v1
        if: ${{ success() || steps.compile.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-compile-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Test Install
        run: |
          meson install -C build

      - name: Upload Install Log
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-install-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

  "AppImage_Compile_Naev":
    needs: [Package_Source, Compile_Naev]
    runs-on: ubuntu-latest
    container:
      image: projectsynchro/synchros_sexy_docker_images:naev-ubuntu1604

    steps:
      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naev-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naev-dist-${{ github.sha }}/naev-*.tar.xz -C source --strip 1

      - name: Compile AppImage
        id: appimageCompile
        run: |
          script -c "./source/utils/buildAppImage.sh -c -m -s "source" -b "build" -o "${{ github.workspace }}/dist"" appImageBuildLog.txt
          pwd
          ls -l ${{ github.workspace }}/dist
          pwd
          ls -l ${{ github.workspace }}/dist/out
          pwd
        env:
          APPIMAGE_EXTRACT_AND_RUN: 1

      - name: Upload AppImage Compile Log
        uses: actions/upload-artifact@v2
        if: ${{ (success() || steps.appimageCompile.outcome == 'failure') }}
        with:
          name: naev-${{ github.sha }}-AppImageBuild-log
          path: |
            appImageBuildLog.txt

      - name: Upload AppImage Artifact
        uses: actions/upload-artifact@v2
        with:
          name: naev-${{ github.sha }}-AppImageBuild
          path: |
            dist/out/*
          if-no-files-found: error

  "Lua_Documentation":
    runs-on: ubuntu-latest
    container:
      image: projectsynchro/synchros_sexy_docker_images:naev-ubuntu2004
    needs: [Package_Source, Compile_Naev]

    steps:
      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naev-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naev-dist-${{ github.sha }}/naev-*.tar.xz -C source --strip 1

      - name: Meson Setup
        run: |
          meson setup build source \
              -Dexecutable=disabled

      - name: Meson Compile
        run: |
          meson compile -C build

      - name: Trigger API Documentation Update
        if: ${{ github.event_name == 'push' && github.repository == 'naev/naev' }}
        run: |
          curl -X POST https://api.github.com/repos/naev/naev.github.io/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.WEBSITE_ACCESS_TOKEN }} \
          --data '{"event_type": "api", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
